{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar guesses;\nvar secret;\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guidance = _useState4[0],\n      setGuidance = _useState4[1];\n\n  var initiate = function initiate() {\n    setGuidance(\"Guess a number between 1-100\");\n    secret = Math.floor(Math.random() * 100) + 1;\n    guesses = 0;\n  };\n\n  useEffect(function () {\n    initiate();\n  }, []);\n\n  var makeGuess = function makeGuess() {\n    var guess = Number(input);\n    guesses++;\n\n    if (guess < secret) {\n      setGuidance(guess + \" is too low!\");\n    } else if (guess > secret) {\n      setGuidance(guess + \" is too high!\");\n    } else {\n      setGuidance(guess + \" is correct! it took you \" + guesses + \" guesses.\");\n      initiate();\n    }\n\n    setInput('');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: guidance\n    }), _jsx(Text, {\n      children: secret\n    }), _jsx(Text, {\n      children: guesses\n    }), _jsx(TextInput, {\n      style: styles.textbox,\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(text) {\n        return setInput(text);\n      },\n      value: input\n    }), _jsx(Button, {\n      title: \"Make a guess\",\n      onPress: makeGuess\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textbox: {\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    width: '50%',\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/badge/Documents/Koulu/mobiiliohjelmointi/t2/App.js"],"names":["StatusBar","useEffect","useState","guesses","secret","App","input","setInput","guidance","setGuidance","initiate","Math","floor","random","makeGuess","guess","Number","styles","container","textbox","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderColor","borderWidth","padding","width","margin"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;;;;;;;AAGA,IAAIC,OAAJ;AACA,IAAIC,MAAJ;AAEA,eAAe,SAASC,GAAT,GAAe;AAI5B,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBD,IAAAA,WAAW,gCAAX;AACAL,IAAAA,MAAM,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAA3C;AACAV,IAAAA,OAAO,GAAG,CAAV;AACD,GAJD;;AAMAF,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,QAAMC,KAAK,GAAGC,MAAM,CAACV,KAAD,CAApB;AACAH,IAAAA,OAAO;;AAEP,QAAIY,KAAK,GAAGX,MAAZ,EAAoB;AAClBK,MAAAA,WAAW,CAAIM,KAAJ,kBAAX;AACD,KAFD,MAEO,IAAIA,KAAK,GAAGX,MAAZ,EAAoB;AACzBK,MAAAA,WAAW,CAAIM,KAAJ,mBAAX;AACD,KAFM,MAEA;AACLN,MAAAA,WAAW,CAAIM,KAAJ,iCAAqCZ,OAArC,eAAX;AACAO,MAAAA,QAAQ;AACT;;AACDH,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAbD;;AAeA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAA,gBAAOV;AAAP,MADF,EAEE,KAAC,IAAD;AAAA,gBAAOJ;AAAP,MAFF,EAGE,KAAC,IAAD;AAAA,gBAAOD;AAAP,MAHF,EAIE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAEc,MAAM,CAACE,OAAzB;AACE,MAAA,YAAY,EAAC,YADf;AAEE,MAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,eAAIb,QAAQ,CAACa,IAAD,CAAZ;AAAA,OAFpB;AAGE,MAAA,KAAK,EAAEd;AAHT,MAJF,EAUE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAEQ;AAAtC,MAVF,EAYE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MAZF;AAAA,IADF;AAgBD;AAED,IAAMG,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,WAAW,EAAE,OADN;AAEPC,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,OAAO,EAAE,CAHF;AAIPC,IAAAA,KAAK,EAAE,KAJA;AAKPC,IAAAA,MAAM,EAAE;AALD;AAPsB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, Alert, Image } from 'react-native';\n\nlet guesses;\nlet secret;\n\nexport default function App() {\n\n\n\n  const [input, setInput] = useState('');\n  const [guidance, setGuidance] = useState('');\n\n  const initiate = () => {\n    setGuidance(`Guess a number between 1-100`);\n    secret = Math.floor(Math.random() * 100) + 1;\n    guesses = 0;\n  }\n\n  useEffect(() => {\n    initiate();\n  }, [])\n\n  const makeGuess = () => {\n    const guess = Number(input);\n    guesses++;\n\n    if (guess < secret) {\n      setGuidance(`${guess} is too low!`);\n    } else if (guess > secret) {\n      setGuidance(`${guess} is too high!`);\n    } else {\n      setGuidance(`${guess} is correct! it took you ${guesses} guesses.`);\n      initiate();\n    }\n    setInput('');\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text>{guidance}</Text>\n      <Text>{secret}</Text>\n      <Text>{guesses}</Text>\n      <TextInput style={styles.textbox}\n        keyboardType='number-pad'\n        onChangeText={text => setInput(text)}\n        value={input}\n        >\n      </TextInput>\n      <Button title=\"Make a guess\" onPress={makeGuess} />\n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textbox: {\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    width: '50%',\n    margin: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}