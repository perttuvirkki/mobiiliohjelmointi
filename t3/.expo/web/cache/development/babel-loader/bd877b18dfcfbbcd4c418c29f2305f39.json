{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState, useRef } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      num1 = _useState4[0],\n      setNum1 = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      num2 = _useState6[0],\n      setNum2 = _useState6[1];\n\n  var initialFocus = useRef(null);\n\n  var calculate = function calculate(operator) {\n    var _ref = [Number(num1), Number(num2)],\n        number1 = _ref[0],\n        number2 = _ref[1];\n\n    switch (operator) {\n      case '+':\n        setResult(number1 + number2);\n        break;\n\n      case '-':\n        setResult(number1 - number2);\n        break;\n    }\n\n    setNum1('');\n    setNum2('');\n    initialFocus.current.focus();\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"Result: \", result]\n    }), _jsx(TextInput, {\n      style: styles.textbox,\n      ref: initialFocus,\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(text) {\n        return setNum1(text);\n      },\n      value: num1\n    }), _jsx(TextInput, {\n      style: styles.textbox,\n      keyboardType: \"number-pad\",\n      onChangeText: function onChangeText(text) {\n        return setNum2(text);\n      },\n      value: num2\n    }), _jsxs(View, {\n      style: styles.operators,\n      children: [_jsx(View, {\n        style: styles.buttons,\n        children: _jsx(Button, {\n          title: \"+\",\n          onPress: function onPress() {\n            return calculate('+');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.buttons,\n        children: _jsx(Button, {\n          title: \"-\",\n          onPress: function onPress() {\n            return calculate('-');\n          }\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textbox: {\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    width: '50%',\n    margin: 10\n  },\n  operators: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly'\n  },\n  buttons: {\n    width: '20%',\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/badge/Documents/Koulu/mobiiliohjelmointi/t3/App.js"],"names":["StatusBar","React","useState","useRef","App","result","setResult","num1","setNum1","num2","setNum2","initialFocus","calculate","operator","Number","number1","number2","current","focus","styles","container","textbox","text","operators","buttons","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderColor","borderWidth","padding","width","margin","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button, Alert, TextInput, Image } from 'react-native';\nimport React, { useState, useRef } from 'react';\n\nexport default function App() {\n\n  const [result, setResult] = useState('');\n  const [num1, setNum1] = useState(''); \n  const [num2, setNum2] = useState('');\n  \n  const initialFocus = useRef(null);\n  \n  const calculate = operator => {\n    const [number1, number2] = [Number(num1), Number(num2)];\n\n    switch (operator) {\n      case '+':\n        setResult(number1+number2);\n        break;\n\n      case '-':\n        setResult(number1-number2);\n        break;\n    }\n    setNum1('');\n    setNum2('');\n    initialFocus.current.focus();\n  }\n\n\n  return (\n    \n    <View style={styles.container}>\n      \n      \n      <Text>Result: {result}</Text>\n\n      <TextInput style={styles.textbox} ref={initialFocus}\n        keyboardType='number-pad'\n        onChangeText={text => setNum1(text)}\n        value={num1}>\n      </TextInput>\n      <TextInput style={styles.textbox}\n        keyboardType='number-pad'\n        onChangeText={text => setNum2(text)}\n        value={num2}>\n      </TextInput>\n      <View style={styles.operators}>\n        <View style={styles.buttons}>\n          <Button title=\"+\" onPress={() => calculate('+')} />\n        </View>\n        <View style={styles.buttons}>\n          <Button title=\"-\" onPress={() => calculate('-')} />\n        </View>\n      </View>\n\n      <StatusBar style=\"auto\" />\n\n    </View>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  textbox: {\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 5,\n    width: '50%',\n    margin: 10,\n  },\n\n  operators: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n  },\n\n  buttons: {\n    width: '20%',\n    borderColor: 'black',\n    borderWidth: 1,\n    margin: 10,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}