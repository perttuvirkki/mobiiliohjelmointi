{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var buttonPressed = function buttonPressed() {\n    setData([].concat(_toConsumableArray(data), [{\n      key: text\n    }]));\n    setText('');\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      onChangeText: function onChangeText(text) {\n        return setText(text);\n      },\n      value: text\n    }), _jsx(Button, {\n      onPress: buttonPressed,\n      title: \"Press me\"\n    }), _jsx(FlatList, {\n      style: styles.list,\n      data: data,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Text, {\n          children: item.key\n        });\n      }\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  },\n  input: {\n    marginTop: 50,\n    marginBottom: 5,\n    width: 200,\n    borderColor: 'gray',\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/badge/Documents/Koulu/mobiiliohjelmointi/t3/App.js"],"names":["StatusBar","React","useState","App","text","setText","data","setData","buttonPressed","key","styles","container","input","list","item","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","marginTop","marginBottom","width","borderColor","borderWidth"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAwBD,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOE,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BD,IAAAA,OAAO,8BAAKD,IAAL,IAAW;AAAEG,MAAAA,GAAG,EAAEL;AAAP,KAAX,GAAP;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAHD;;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAED,MAAM,CAACE,KAAzB;AAAgC,MAAA,YAAY,EAAE,sBAAAR,IAAI;AAAA,eAAIC,OAAO,CAACD,IAAD,CAAX;AAAA,OAAlD;AAAqE,MAAA,KAAK,EAAEA;AAA5E,MADF,EAEE,KAAC,MAAD;AAAQ,MAAA,OAAO,EAAEI,aAAjB;AAAgC,MAAA,KAAK,EAAC;AAAtC,MAFF,EAGE,KAAC,QAAD;AAAU,MAAA,KAAK,EAAEE,MAAM,CAACG,IAAxB;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,UAAU,EAAE;AAAA,YAAGQ,IAAH,QAAGA,IAAH;AAAA,eACV,KAAC,IAAD;AAAA,oBAAOA,IAAI,CAACL;AAAZ,UADU;AAAA;AAFd,MAHF,EASE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAC;AAAjB,MATF;AAAA,IADF;AAaD;AAED,IAAMC,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,SAAS,EAAE,EADN;AAELC,IAAAA,YAAY,EAAE,CAFT;AAGLC,IAAAA,KAAK,EAAE,GAHF;AAILC,IAAAA,WAAW,EAAE,MAJR;AAKLC,IAAAA,WAAW,EAAE;AALR;AAPwB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput, FlatList } from 'react-native';\n\nexport default function App() {\n  const [text, setText] = useState('');\n  const [data, setData] = useState([]);\n\n  const buttonPressed = () => {\n    setData([...data, { key: text }]);\n    setText('');\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput style={styles.input} onChangeText={text => setText(text)} value={text} />\n      <Button onPress={buttonPressed} title=\"Press me\" />\n      <FlatList style={styles.list}\n        data={data}\n        renderItem={({ item }) =>\n          <Text>{item.key}</Text>\n        }\n      />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  input: {\n    marginTop: 50,\n    marginBottom: 5,\n    width: 200,\n    borderColor: 'gray',\n    borderWidth: 1 \n  }\n});"]},"metadata":{},"sourceType":"module"}